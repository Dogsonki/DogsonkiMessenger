@page "/PasswordChangeForm";

@inject NavigationManager navigation;

@using Client.Networking;
@using Client.Networking.Models;

<div style="text-align:center">
    <h1> Password Reset </h1>

    <span>Enter your new password</span>

    <input @bind="passwordInput" placeholder="Your new password" />

    <button @onclick="TrySendPassword">Confirm</button>

    <span style="color:red">@errorMessage</span>

</div>

@code {
    private string? passwordInput;

    private string? errorMessage;

    private void TrySendPassword()
    {

        if (string.IsNullOrEmpty(passwordInput))
        {
            errorMessage = "Password was empty";
            return;
        }

        if (!SocketCore.SendCallback(passwordInput, Token.PASSWORD_FORGOT, PasswordConfirmationCallback, true))
        {
            errorMessage = "Unable to connect to the server";
            return;
        }
    }

    private void PasswordConfirmationCallback(SocketPacket packet)
    {
        int token = packet.ToInt();

        InvokeAsync(() =>
        {
            switch (token)
            {
                case 0:
                    string info = "Password to your account was successfully changed";
                    navigation.NavigateTo("/login/" + info);
                    break;
                case 3:
                    errorMessage = "Password doesn't match requirements";
                    break;
            }
            StateHasChanged();
        });
    }
}
