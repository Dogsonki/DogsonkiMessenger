@page "/MainPage"

@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using Client.Pages.Components;
@using Client.Models.LastChats;

@inject NavigationManager navigation
@inject IJSRuntime JSRuntime 

<div>
    <div id="search-bar">
        <form @onsubmit="SearchBarSubmit">
            <input @bind="SearchInput" type="text" placeholder="Search" />
        </form>
    </div>

    <div>
        <div id="localuser-display">
            <img class="avatar" alt="local_user_avatar" src="@currentUser.AvatarImageSource" />
            <div class="userinfo">
                <p class="userinfo">@currentUser.Name<span style="color:dimgray">#@currentUser.Id</span> </p>
            </div>
            <div class="settings-frame-btn">
                <img @onclick=OpenSettings class="settings-btn" src="Images/settings.png" />
            </div>
        </div>
    </div>

    <div id="menu-header">
        <ul>
            <li>
                <span class="@(ShouldRenderLastChats ? "option-selected" : "")" @onclick="()=> ShouldRenderLastChats = true">Last Chats</span>
            </li>
            <li>
                <span class="@(ShouldRenderLastChats ? "" : "option-selected")" @onclick="()=> ShouldRenderLastChats = false">Requests</span>
            </li>
        </ul>
    </div>

    <LoadingComponent Class="LastChatsLoading" LoadingController=@LoadingEvents["LastChatsLoading"]></LoadingComponent>
    <MiniProfile Controller="@MiniProfileController"></MiniProfile>

    <!-- Temporary solution to hide and show list / use offscreen instead -->
    <ul id="last-chats" style="display: @(ShouldRenderLastChats ? "initial" : "none")">
        @foreach (LastChat lastChat in lastChatService.GetLastChats())
        {
            <li>
                <div @onclick="() => ShowMiniProfileMenu(lastChat.BindedView)" class="chat-frame">
                    <div>
                        <img class="chat-author-avatar" src="@lastChat.AvatarImageSource">
                        <div style="background-color: @(lastChat.GetStatusColor())" class="chat-author-status"></div>
                    </div>
                    <div class="chat-content">
                        <div class="chat-info">
                            <span class="chat-author-name">@lastChat.Name</span>
                            <span class="chat-timestamp">@lastChat.FactoredTime</span>
                        </div>
                        <div class="chat-body">
                            <span>@lastChat.MessageSenderName: @lastChat.Message</span>
                        </div>
                    </div>
                </div>
            </li>
        }
    </ul>

    @if (lastChatService.ChatsCount == 0 && !ShouldRenderLastChats) {
        <h2 style="text-align: center">Looks like nothing here.</h2>
    }

    <!-- Temporary solution to hide and show list / use offscreen instead -->
    <ul id="last-chats" style="display: @(ShouldRenderLastChats ? "none" : "initial")">
        @foreach (IViewBindable request in Requests)
        {
            <li>
                <div class="chat-frame">
                    <div>
                        <img class="chat-author-avatar" src="@request.AvatarImageSource">
                    </div>
                    <div class="chat-content">
                        <div class="chat-info">
                            <span class="chat-author-name">@request.Name <span style="color: #72767d">#@request.Id</span> </span>
                        </div>
                    </div>
                    <button @onclick="() => AcceptInviteRequest(request)" class="requests-accept-btn"> ACCEPT </button>
                </div>
            </li>
        }
    </ul>

</div>

