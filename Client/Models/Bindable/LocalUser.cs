using Client.IO;
using Client.Networking.Core;
using Client.Pages;
using Client.Utility;
using CommunityToolkit.Mvvm.ComponentModel;

namespace Client.Models.Bindable;

partial class LocalUser : ObservableObject, IViewBindable
{
    public static LocalUser Current { get; set; }

    public LocalUser CurrentLocalUser 
    { 
        get 
        {
            Debug.ThrowIfNull(Current);

            return Current;
        }
    }

    public static User UserRef { get; private set; }

    public string Name { get; }

    public uint Id { get; }

    [ObservableProperty]  
    public ImageSource avatar;

    public BindableType BindType { get => BindableType.LocalUser; }

    #region UI_VISIBLE

    public string FactoredDogeCoinsCount => $"Doge Coins: 0";
    public string FactoredLegendaryDogeCoinsCount => $"Legendary Doge Coins: 0";

    #endregion

    public LocalUser() { }

    public static void Logout()
    {
        SocketCore.Send(" ", Token.LOGOUT);
        ToDefault();
    }

    public static void Login(string username, string id, string email)
    {
        MainThread.BeginInvokeOnMainThread(() =>
        {
            LocalUser user = new LocalUser(username, uint.Parse(id));
            StaticNavigator.Push(new MainPage());
        });
    }

    public LocalUser(string name, uint id)
    {
        Id = id;
        Name = name;
        Current = this;

        AvatarManager.SetAvatar(this);
    }

    //Clear datas generated by last user
    private static void ToDefault()
    {
        User.ClearUsers();
    }
}
